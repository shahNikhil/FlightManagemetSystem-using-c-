/*
Deployment script for AirlineReservationDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "AirlineReservationDB"
:setvar DefaultFilePrefix "AirlineReservationDB"
:setvar DefaultDataPath "C:\Users\mshah\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\mshah\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Admin]...';


GO
CREATE TABLE [dbo].[Admin] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [UserName] NVARCHAR (50) NULL,
    [Password] NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[BookingDetails]...';


GO
CREATE TABLE [dbo].[BookingDetails] (
    [Booking_ ID]   INT           IDENTITY (1000, 1) NOT NULL,
    [Customer_ID]   INT           NULL,
    [Carrier_ID]    INT           NULL,
    [Source]        NVARCHAR (50) NULL,
    [Destination]   NVARCHAR (50) NULL,
    [DateOfJourney] NVARCHAR (50) NULL,
    [SeatNo]        INT           NULL,
    CONSTRAINT [PK_Booking_ID] PRIMARY KEY CLUSTERED ([Booking_ ID] ASC)
);


GO
PRINT N'Creating [dbo].[Carrier]...';


GO
CREATE TABLE [dbo].[Carrier] (
    [Carrier_ID]    INT           IDENTITY (1, 1) NOT NULL,
    [Airplane Name] NVARCHAR (50) NULL,
    [Country]       NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Carrier_ID] ASC)
);


GO
PRINT N'Creating [dbo].[FlightDetails]...';


GO
CREATE TABLE [dbo].[FlightDetails] (
    [Flight_ID]      INT           IDENTITY (1, 1) NOT NULL,
    [Flight_Name]    NVARCHAR (50) NULL,
    [Source]         NVARCHAR (50) NULL,
    [Destination]    NVARCHAR (50) NULL,
    [Arrival_Time]   NVARCHAR (50) NULL,
    [Departure]      NVARCHAR (50) NULL,
    [Flight_Class]   NVARCHAR (50) NULL,
    [Flight_Charges] DECIMAL (18)  NULL,
    [Seats]          INT           NULL,
    [Airplane Name]  NVARCHAR (50) NULL,
    CONSTRAINT [PK_Flight_Details] PRIMARY KEY CLUSTERED ([Flight_ID] ASC)
);


GO
PRINT N'Creating [dbo].[PassengerDetails]...';


GO
CREATE TABLE [dbo].[PassengerDetails] (
    [Customer_ID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]   NVARCHAR (50)  NULL,
    [LastName]    NVARCHAR (50)  NULL,
    [DateOfBirth] TEXT           NULL,
    [Email]       NVARCHAR (50)  NULL,
    [Phone]       NVARCHAR (50)  NULL,
    [Address]     NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_Customer_Details] PRIMARY KEY CLUSTERED ([Customer_ID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Customer_ID]...';


GO
ALTER TABLE [dbo].[BookingDetails]
    ADD CONSTRAINT [FK_Customer_ID] FOREIGN KEY ([Customer_ID]) REFERENCES [dbo].[PassengerDetails] ([Customer_ID]);


GO
PRINT N'Creating [dbo].[FK_Carrier_ID]...';


GO
ALTER TABLE [dbo].[BookingDetails]
    ADD CONSTRAINT [FK_Carrier_ID] FOREIGN KEY ([Carrier_ID]) REFERENCES [dbo].[Carrier] ([Carrier_ID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'eaab6b9f-eff5-4dfb-a955-00250f135397')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('eaab6b9f-eff5-4dfb-a955-00250f135397')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '176525bb-f732-424a-9764-c2fafba18822')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('176525bb-f732-424a-9764-c2fafba18822')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '73e4acee-f422-470a-b2b3-878e7e1bfbe8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('73e4acee-f422-470a-b2b3-878e7e1bfbe8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c2058d68-fc24-40a8-870c-95233a441a6a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c2058d68-fc24-40a8-870c-95233a441a6a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8fb826a6-c2f6-45d6-802c-2ef16f1bc113')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8fb826a6-c2f6-45d6-802c-2ef16f1bc113')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1f074a31-bad8-4a63-8728-1f9339edddd2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1f074a31-bad8-4a63-8728-1f9339edddd2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'af11b40b-ec73-4efa-afc1-7ef3d7574b54')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('af11b40b-ec73-4efa-afc1-7ef3d7574b54')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c13d426a-5db1-49b0-83ce-3a4cb42f1c6a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c13d426a-5db1-49b0-83ce-3a4cb42f1c6a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f6ea67ac-abf8-47e9-ab88-f59dd1342e78')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f6ea67ac-abf8-47e9-ab88-f59dd1342e78')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


SET IDENTITY_INSERT [dbo].[PassengerDetails] ON
INSERT INTO [dbo].[PassengerDetails] ([Customer_ID], [FirstName], [LastName],[DateOfBirth],[Email],[Phone],[Address]) VALUES (1,N'Nikhil', N'Shah','07-10-1997','shahn6@studentdouglascollege.ca','911','USA')
INSERT INTO [dbo].[PassengerDetails] ([Customer_ID], [FirstName], [LastName],[DateOfBirth],[Email],[Phone],[Address]) VALUES (2,N'Aakash', N'Shah','07-01-1998','shaha@studentdouglascollege.ca','911','Surrey')
INSERT INTO [dbo].[PassengerDetails] ([Customer_ID], [FirstName], [LastName],[DateOfBirth],[Email],[Phone],[Address]) VALUES (3,N'Rashmeet', N'Shah','05-10-2020','shahr@studentdouglascollege.ca','911','Surrey')
INSERT INTO [dbo].[PassengerDetails] ([Customer_ID], [FirstName], [LastName],[DateOfBirth],[Email],[Phone],[Address]) VALUES (4,N'Henil', N'Shah','10-06-1997','shahh@studentdouglascollege.ca','911','new west')
INSERT INTO [dbo].[PassengerDetails] ([Customer_ID], [FirstName], [LastName],[DateOfBirth],[Email],[Phone],[Address]) VALUES (5,N'Tanvi', N'Somani','04-10-1997','somanit@studentdouglascollege.ca','911','new west')
INSERT INTO [dbo].[PassengerDetails] ([Customer_ID], [FirstName], [LastName],[DateOfBirth],[Email],[Phone],[Address]) VALUES (6,N'Prajakta', N'Selukar','07-08-1997','selukarp@studentdouglascollege.ca','911','Burnaby')
INSERT INTO [dbo].[PassengerDetails] ([Customer_ID], [FirstName], [LastName],[DateOfBirth],[Email],[Phone],[Address]) VALUES (7,N'Ninad', N'Tande','07-10-1996','tanden@studentdouglascollege.ca','911','Burnaby')
SET IDENTITY_INSERT [dbo].[PassengerDetails] OFF
GO

SET IDENTITY_INSERT [dbo].[FlightDetails] ON
INSERT INTO [dbo].[FlightDetails] ([Flight_ID], [Flight_Name], [Source],[Destination],[Arrival_Time],[Departure],[Flight_Class],[Seats],[Airplane Name])  VALUES (1,N'Air Canada', N'YVR','N HKG',N'10:00',N'22:00',N'ECONOMY',100,N'ac1')
INSERT INTO [dbo].[FlightDetails] ([Flight_ID], [Flight_Name], [Source],[Destination],[Arrival_Time],[Departure],[Flight_Class],[Seats],[Airplane Name]) VALUES (2,N'Air China', N'YVR','N BOM',N'10:00',N'22:00',N'ECONOMY',99,N'ac2')
INSERT INTO [dbo].[FlightDetails] ([Flight_ID], [Flight_Name], [Source],[Destination],[Arrival_Time],[Departure],[Flight_Class],[Seats],[Airplane Name]) VALUES (3,N'Air India', N'BOM','N LEX',N'10:00',N'22:00',N'ECONOMY',80,N'ai3')
INSERT INTO [dbo].[FlightDetails] ([Flight_ID], [Flight_Name], [Source],[Destination],[Arrival_Time],[Departure],[Flight_Class],[Seats],[Airplane Name]) VALUES (4,N'British Airways', N'LHR','N YVR',N'10:00',N'22:00',N'ECONOMY',115,N'ba4')
INSERT INTO [dbo].[FlightDetails] ([Flight_ID], [Flight_Name], [Source],[Destination],[Arrival_Time],[Departure],[Flight_Class],[Seats],[Airplane Name]) VALUES (5,N'Emirates', N'DIY',N'RIP',N'10:00',N'22:00',N'ECONOMY',125,N'em5')
INSERT INTO [dbo].[FlightDetails] ([Flight_ID], [Flight_Name], [Source],[Destination],[Arrival_Time],[Departure],[Flight_Class],[Seats],[Airplane Name]) VALUES (6,N'Lufthanza', N'RIP','N DIY',N'10:00',N'22:00',N'ECONOMY',110,N'lu6')
SET IDENTITY_INSERT [dbo].[FlightDetails] OFF
GO

SET IDENTITY_INSERT [dbo].[Admin] ON
INSERT INTO [dbo].[Admin] ([Id],[UserName],[Password]) VALUES(1,N'aakash',N'admin1')
INSERT INTO [dbo].[Admin] ([Id],[UserName],[Password]) VALUES(2,N'nikhil',N'admin2')
INSERT INTO [dbo].[Admin] ([Id],[UserName],[Password]) VALUES(3,N'rashmeet',N'admin3')
SET IDENTITY_INSERT [dbo].[Admin] OFF
GO

SET IDENTITY_INSERT [dbo].[Carrier] ON
INSERT INTO [dbo].[Carrier] ([Carrier_ID],[Airplane Name],[Country]) VALUES (1,N'ac1',N'CANADA')
INSERT INTO [dbo].[Carrier] ([Carrier_ID],[Airplane Name],[Country]) VALUES (2,N'ac2',N'CHINA')
INSERT INTO [dbo].[Carrier] ([Carrier_ID],[Airplane Name],[Country]) VALUES (3,N'lu6',N'USA')
INSERT INTO [dbo].[Carrier] ([Carrier_ID],[Airplane Name],[Country]) VALUES (4,N'em5',N'USA')
INSERT INTO [dbo].[Carrier] ([Carrier_ID],[Airplane Name],[Country]) VALUES (5,N'ba4',N'LONDON')
INSERT INTO [dbo].[Carrier] ([Carrier_ID],[Airplane Name],[Country]) VALUES (6,N'ai3',N'INDIA')
SET IDENTITY_INSERT [dbo].[Carrier] OFF
GO

SET IDENTITY_INSERT [dbo].[BookingDetails] ON
INSERT INTO [dbo].[BookingDetails] ([Booking_ ID],[Carrier_ID],[Customer_ID],[Source],[Destination],[DateOfJourney],[SeatNo]) VALUES (1,3,4, N'RIP',N'DIY','20-01-2021',1)
INSERT INTO [dbo].[BookingDetails] ([Booking_ ID],[Carrier_ID],[Customer_ID],[Source],[Destination],[DateOfJourney],[SeatNo]) VALUES (2,3,1, N'RIP',N'DIY','20-01-2021',2)
INSERT INTO [dbo].[BookingDetails] ([Booking_ ID],[Carrier_ID],[Customer_ID],[Source],[Destination],[DateOfJourney],[SeatNo]) VALUES (3,4,4, N'DIY',N'RIP','25-01-2021',1)
INSERT INTO [dbo].[BookingDetails] ([Booking_ ID],[Carrier_ID],[Customer_ID],[Source],[Destination],[DateOfJourney],[SeatNo]) VALUES (4,4,1, N'DIY',N'RIP','25-01-2021',2)
SET IDENTITY_INSERT [dbo].[BookingDetails] OFF
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
